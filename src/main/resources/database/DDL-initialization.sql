-- Administrator, User, Guest
CREATE TABLE ROLES (
ID int NOT NULL AUTO_INCREMENT,
ROLE varchar(20) NOT NULL UNIQUE,
PRIMARY KEY (ID)
);

-- ok, limited, locked
CREATE TABLE USERS_STATUSES (
ID int NOT NULL AUTO_INCREMENT,
STATUS varchar(20) NOT NULL,
DURATION date NOT NULL,
PRIMARY KEY (ID)
);


CREATE TABLE USERS (
ID int NOT NULL AUTO_INCREMENT,
LOGIN varchar(40) NOT NULL UNIQUE,
PASSWORD varchar(40) NOT NULL,
NAME varchar(40) NOT NULL,
ROLES_ID int NOT NULL,
USERS_STATUSES_ID int NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY (ROLES_ID) REFERENCES ROLES(ID),
FOREIGN KEY (USERS_STATUSES_ID) REFERENCES USERS_STATUSES (ID)
);


CREATE TABLE AUTHORS (
ID int NOT NULL AUTO_INCREMENT,
AUTHOR varchar(40) NOT NULL UNIQUE,
PRIMARY KEY (ID)
);


CREATE TABLE GENRES (
ID int NOT NULL AUTO_INCREMENT,
GENRE varchar(20) NOT NULL UNIQUE,
PRIMARY KEY (ID)
);


CREATE TABLE BOOKS (
ID int NOT NULL AUTO_INCREMENT,
TITLE varchar(63) NOT NULL,
DESCRIPTION varchar(255),	    -- описание
IMAGE BLOB,                     -- изображение
QUANTITY int NOT NULL,          -- колличество
AUTHORS_ID int NOT NULL,
GENRES_ID int NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY (AUTHORS_ID) REFERENCES AUTHORS(ID),
FOREIGN KEY (GENRES_ID) REFERENCES GENRES (ID)
);

-- Книги взятые пользавателями
CREATE TABLE ORDERS (
ID int NOT NULL AUTO_INCREMENT,
DATE_RECEIVING date NOT NULL,	    -- дата получения
DAYS int NOT NULL,		            -- на сколько дней
BOOKS_ID int NOT NULL,
USERS_ID int NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY (BOOKS_ID) REFERENCES BOOKS (ID),
FOREIGN KEY (USERS_ID) REFERENCES USERS (ID)
);

CREATE TABLE MESSAGES (
ID int NOT NULL AUTO_INCREMENT,
DATE_SENT date NOT NULL,
CONTENT varchar(255),
USERS_ID int NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY (USERS_ID) REFERENCES USERS (ID)
);